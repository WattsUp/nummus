openapi: 3.0.0
servers:
  - url: https://nummus/api
info:
  description: >-
    This is a server for nummus: A personal financial information aggregator and
    planning tool. Collects and categorizes transactions, manages budgets,
    tracks investments, calculates net worth, and predicts future performance.
  version: 0.1.0
  title: nummus API
  license:
    name: MIT
    url: https://github.com/WattsUp/nummus/blob/master/LICENSE
tags:
  - name: Configuration
    description: nummus configuration settings
  - name: Account
    description: Financial account information
  - name: Transaction
    description: Exchange of cash for an asset (or none)
  - name: Asset
    description: Access to individual assets that have a dynamic worth
  - name: Portfolio
    description: Operations on entire portfolio
  - name: Budget
    description: Allocation of cash flow transactions by categories
  - name: Planning
    description: >-
      Planning tools TODO (WattsUp) add future net worth, retirement, and
      investment planning tools. Future net worth uses multiple simulators to
      determine worth in next 1/2 years including expected cashflow. Retirement
      looks at annual future net worth until death with large life cash flows
      event (same source as future net worth). Investment planning uses
      robo-advising to recommend fund allocation.
paths:
  /version:
    get:
      tags:
        - Configuration
      summary: Displays version information.
      description: ""
      x-openapi-router-controller: nummus.web.controller_config
      operationId: get_version
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  api:
                    description: Version of nummus API
                    type: string
                    format: "[major].[minor].[patch]"
                    pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$
                    example: 0.1.0
                  nummus:
                    description: Version of nummus server
                    type: string
                    format: "[major].[minor].[patch](-tweak)"
                    pattern: >-
                      ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)-?([a-zA-Z\d][-a-zA-Z.\d]*)?$
                    example: 10.2.0-rc1-alpha
  /account:
    post:
      tags:
        - Account
      summary: Add a new Account to the portfolio
      description: ""
      x-openapi-router-controller: nummus.web.controller_account
      operationId: create
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Invalid parameter supplied
      requestBody:
        $ref: "#/components/requestBodies/Account"
  /accounts:
    get:
      tags:
        - Account
      summary: Get Accounts of Portfolio
      description: ""
      x-openapi-router-controller: nummus.web.controller_account
      operationId: get_all
      parameters:
        - $ref: "#/components/parameters/AccountCategory"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
        "400":
          description: Invalid parameter supplied
externalDocs:
  description: Find out more about nummus
  url: https://github.com/WattsUp/nummus
components:
  requestBodies:
    Account:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Account"
      description: Account object that needs to be added to the portfolio
      required: true
  responses:
    Image:
      description: Image content
      content:
        image/*:
          schema:
            type: string
            format: byte
            example: 6tZMso4sTUeoJTDg3UB3xw==
    HTML:
      description: HTML content
      content:
        text/html:
          example: <html><body>Your HTML text</body></html>
  parameters:
    AccountCategory:
      name: category
      in: query
      description: Filter data by Account category
      schema:
        $ref: "#/components/schemas/Account/properties/category"
  schemas:
    Account:
      description: An financial Account of the portfolio
      type: object
      required:
        - uuid
        - name
        - institution
        - category
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          example: Monkey Bank Checking
        institution:
          type: string
          example: Monkey Bank
        category:
          type: string
          enum:
            - cash
            - credit
            - investment
            - mortgage
            - loan
            - fixed
            - other
        opened_on:
          description: Date of first transaction
          type: string
          format: date
          readOnly: true
        updated_on:
          description: Date of latest transaction
          type: string
          format: date
          readOnly: true
